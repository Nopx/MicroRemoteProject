package src.org.global.util;

import global.meta.Constants;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;

import src.org.global.util.ErrorPopup;

public class FileHandler {

	public void saveFile(HashMap<Integer,String[]> map, File file){
		String fileName = file.getPath();
		if(!fileName.endsWith(Constants.DATATYPE)){
			fileName += Constants.DATATYPE;
		}
		file = new File(fileName);
		FileOutputStream fileOps;
		ObjectOutputStream objObs;
		try {
			fileOps = new FileOutputStream(file);
			objObs = new ObjectOutputStream(fileOps);
			objObs.writeObject(map);
			objObs.close();
		} catch (FileNotFoundException e) {
			ArdWindow.println("Broken file path. Change where Plugin is to /mmplugins/MicroRemote/MicroRemote.jar");
		} catch (IOException e) {
			LogStreamer.write(e.getMessage());
		}
	}
	
	@SuppressWarnings("unchecked")
	public HashMap<Integer,String[]> loadFile(File file)throws Exception{
		HashMap<Integer,String[]> map = new HashMap<Integer,String[]>();
		String fileName = file.getPath();
		if(!fileName.endsWith(Constants.DATATYPE)){
			fileName += Constants.DATATYPE;
		}
		file = new File(fileName);
		FileInputStream fileIps = new FileInputStream(file);
		ObjectInputStream objIps = new ObjectInputStream(fileIps);
		try {
			fileIps = new FileInputStream(file);
			objIps = new ObjectInputStream(fileIps);
			map = (HashMap<Integer,String[]>) objIps.readObject();
			objIps.close();
		} 
		catch(ClassNotFoundException e){
			ErrorPopup error = new ErrorPopup("Invalid or broken file");
			error.setVisible(true);
			objIps.close();
			throw(e);
		}
		catch(ClassCastException e){
			ErrorPopup error = new ErrorPopup("Invalid or broken file");
			error.setVisible(true);
			throw(e);
		}
		catch (Exception e) {
			LogStreamer.write(e.getMessage());
			throw(e);
		} 
		return map;
	}
}
